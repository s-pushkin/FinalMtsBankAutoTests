plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

allure {
    version = '2.20.1'
    autoconfigure = true
    aspectjweaver = true
    useJUnit5 {
        version = '2.20.1'
    }
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'com.codeborne:selenide:7.6.0'
    testImplementation 'io.qameta.allure:allure-junit5:2.20.1'
    testImplementation 'io.qameta.allure:allure-selenide:2.20.1'
}

tasks.withType(Test) {
    systemProperty 'file.encoding', 'UTF-8'
    systemProperty 'allure.results.directory', 'build/allure-results'
    useJUnitPlatform()
}

tasks.withType(JavaExec) {
    jvmArgs '-Dfile.encoding=UTF-8'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(ProcessResources) {
    filteringCharset = 'UTF-8'
}

// Убедитесь, что задача allureReport определена только один раз
if (!tasks.findByName('allureReport')) {
    tasks.register('allureReport', Exec) {
        commandLine 'allure', 'generate', 'build/allure-results', '-o', 'build/reports/allure-report', '--clean'
    }
}
